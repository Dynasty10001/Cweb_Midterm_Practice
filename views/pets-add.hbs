<form action="{{action}}" method="post" class="bg-secondary" enctype="multipart/form-data" novalidate>
    <h1>{{ title }}</h1>
    <div class="form-group">
        <label for="license">License Number:</label>
        <input type="text" class="form-control {{#if err.license}}is-invalid{{/if}}" for="license" name="license" required>
        <div class="invalid-feedback">{{err.license}}</div>
    </div>
    <div>
    <label for="petname">Pet Name:</label>
    <input type="text" class="form-control {{#if err.petname}}is-invalid{{/if}}" for="petname" name="petname" required>
        <div class="invalid-feedback">{{err.petname}}</div>
    </div>
        <div>
    <label for="pettype">Pet Type:</label>
    <input type="text" class="form-control {{#if err.pettype}}is-invalid{{/if}}" for="pettype" name="pettype" required>
            <div class="invalid-feedback">{{err.pettype}}</div>
        </div>
    <div>
    <label for="petimage">Pet Image:</label>
    <input type="file" class="form-control {{#if err.petimage}}is-invalid{{/if}}" for="petimage" name="petimage">
        <div class="invalid-feedback">{{err.petimage}}</div>
    </div>
    <div>
    <label for="ownername ">Owner Name:</label>
    <input type="text" class="form-control {{#if err.ownername}}is-invalid{{/if}}" for="ownername " name="ownername" required>
        <div class="invalid-feedback">{{err.ownername}}</div>
    </div>
    <div>
        <input type="submit">
    </div>

<!--TODO: add form inputs for adding a pet-->


</form>
<!--you can delete the div below-->
<div class="card p-2 mt-2 bg-dark">
    <h2>Pets Add </h2>
    <h3> This page will use s form to submit a new pet's information and optionally upload an image file</h3>
    pets-add.hbs:
    <ol>
        <li> Add form inputs for  license, petname, pettype, petimage, ownername [5 marks]</li>
        <li> petimage is a file input , but it is optional to upload a file</li>
        <li> all other fields are required </li>
        <li> You will need to show any form error messages using
            <a target="_blank" href="https://getbootstrap.com/docs/5.0/forms/validation/#server-side">bootstrap validation styles</a>
            [2 marks]</li>
    </ol>
    registry.js:
    <ol>
        <li> Add a working GET handler for pets add [2 marks] </li>
        <li> Add a working POST handler for pets add [2 marks]</li>
        <li> In the post handler add
            <a target="_blank" href="https://github.com/validatorjs/validator.js#validators">>
                express-validators </a> for the following: [6 marks]
            <ul>
                <li> license - must be 8 digits </li>
                <li> petname && ownername - must not me empty (trimmed) and max 50 characters </li>
                <li> pettype -  must not me empty (trimmed) and max 25 characters </li>
                <li> petimage - is optional but if uploaded must be a PNG file (no other image formats) and max 2MB in size </li>
            </ul>
        </li>
        <li> if any are fields are invalid display the error messages (delete the file if uploaded
            <a target="_blank" href="https://nodejs.org/api/fs.html#fs_fs_unlinksync_path">fs.unlinkSync</a>) [2 marks] </li>
        <li> if all fields are valid:
            <ul>
                <li>if an image was uploaded, move
                    (<a target="_blank" href="https://nodejs.org/api/fs.html#fs_fs_renamesync_oldpath_newpath">fs.renameSync</a>)
                    the uploaded file to the /public/images/ folder AND add '.png' to the end of the <b>filename</b></li>
                <li>Next you need to save the pet information to the database:
                    <code><pre>
                    const pet = req.body;
                    pet.petimage = 'DO-NOT-REMOVE-no-image.png';
                    db.prepare(`insert into pets (license,ownername,petimage,petname,pettype)
                    values (:license,:ownername,:petimage,:petname,:pettype)`)
                    .run(pet);
                </pre></code>
                </li>
                <li>BONUS 2 marks: figure out how to save the uploaded filename into the database</li>
                <li> add the pet to an array in the session - so you can display recently added pets in pets view [2 marks] </li>
                <li>redirect to pets view with the 'licence' query string parameter in the url [2 mark]</li>
            </ul>
        </li>

        After Completing pet login:
        <ol>
            <li> In the GET and POST handlers for pets add - check if req.authenticatedUser is exists or redirect to pets login [2 marks] </li>
            <li> If the authenticatedUser has a role of admin - display the ownername input [2 marks] </li>
            <li> otherwise - render a hidden input for ownername with the value of authenticated user's owenername property [2 marks]</li>
        </ol>

    </ol>
</div>
